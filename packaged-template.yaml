AWSTemplateFormatVersion: 2010-09-09
Resources:
  MySNSTopic:
    Type: AWS::SNS::Topic
  MySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: sourav.shaw@datagrokr.com
      Protocol: email
      TopicArn:
        Ref: MySNSTopic
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: instance_id
        AttributeType: S
      KeySchema:
      - AttributeName: instance_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: EC2StateChange007
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: myaws007
        S3Key: index.zip
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Timeout: '30'
    DependsOn:
    - LambdaExecutionRole
  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: EventRule
      EventPattern:
        source:
        - aws.ec2
        detail-type:
        - EC2 Instance State-change Notification
        detail:
          state:
          - running
          - pending
          - stopped
          - terminated
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - LambdaFunction
          - Arn
        Id: TargetFunctionV1
      - Arn:
          Ref: MySNSTopic
        Id: SNStopic
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: LambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - EventRule
        - Arn
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
      - PolicyName: LambdaPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - arn:aws:logs:*:*:*
            Effect: Allow
          - Action:
            - sns:Subscribe
            - sns:Receive
            - sns:Unsubscribe
            Resource:
              Ref: MySNSTopic
            Effect: Allow
          - Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            Resource:
              Fn::GetAtt:
              - DynamoDBTable
              - Arn
            Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
  EventBridgeToSNSPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sns:Publish
          Resource:
            Ref: MySNSTopic
      Topics:
      - Ref: MySNSTopic
